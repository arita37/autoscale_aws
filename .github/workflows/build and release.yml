name: Build and Test , Package PyPI

###  https://github.com/arita37/awesome-actions#static-analysis

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    #- uses: actions/checkout@v1
    #  ref: ${{ github.head_ref }
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
        
    - name: Set up Python 3.6.*
      uses: actions/setup-python@v1
      with:
        python-version: 3.6.*
      
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
      
  
    - name: Cache pipenv virtualenv
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: /opt/hostedtoolcache/Python/
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**py36.txt') }}
          

    #- name: Install numpy
    #  if: steps.cache-pipenv.outputs.cache-hit != 'true'
    #  run: pip install numpy==1.18.2   pillow==6.2.1  scipy
      

    - name: Install repo requirements  1
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
           pip install -r  requirements.txt


    - name: Install - Check
      run:  |
        python -c "import utilmy"


    - name: Install package
      run:  |
        pip install -e .


    - name: test_import
      run: |
           python -c "import os; print(os)"
           python -c "import utilmy; print(utilmy)"


    ################################################################
    ########  Runs All test
    - name: Setup
      run: |
          mkdir -p    /home/runner/work/log_tmp/
          chmod -R 777 .


    - name: test_v1
      run:  |
            python -c "import os"


    ########  Commit
    - name: log_gitcommit
      run: |
           ls .
           






#######################################################################################################
#######################################################################################################
    ########  Generate Docs     
    - name: docs_generate
      continue-on-error: true
      run: |
           docs all      --repo_dir src/  --out_dir docs/
           rm -rf docs/doc_main.md
           rm -rf docs/output_repo.csv


    - name: Auto-Commit
      continue-on-error: true
      id: auto_commmit
      uses: stefanzweifel/git-auto-commit-action@v4.8.0
      with:
          # Optional, but recommended
          # Defaults to "Apply automatic changes"
          commit_message: Auto Docs

          # Optional branch name where commit should be pushed to.
          # Defaults to the current branch.
          # branch: main

          # Optional. Used by `git-commit`.
          # See https://git-scm.com/docs/git-commit#_options
          commit_options: '--no-verify --signoff'

          # Optional glob pattern of files which should be added to the commit
          file_pattern: docs/*.* 

          # Optional local file path to the repository
          # Defaults to the root of the repository
          repository: .
#######################################################################################################





#######################################################################################################
#######################################################################################################
# This Job will upload a Python Package using Twine when a release is created
  deploy:
    needs : [build] # List of dependent Jobs 
    if: success()   # check if all previous (needs) dependent jobs were successfull  then only execute
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and publish
      #env:
      #  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        # echo "$TWINE_USERNAME"
        python run_pipy.py
        python setup.py sdist bdist_wheel
        twine upload dist/*  --username ${{ secrets.PYPI_USERNAME }}     --password ${{ secrets.PYPI_PASSWORD }}  --skip-existing   --repository-url https://upload.pypi.org/legacy/  --verbose   
